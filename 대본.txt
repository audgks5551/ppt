1. 안녕하세요 garbage collection 발표를 맞게된 삽질 개발자입니다.
2. 오늘 발표하게 될 내용은
	첫번째 JVM을 설명드리고
	두번째 garbage collection는 누가 수행하는지 설명드리고
	세번째 garbage collection이 일어나는 위치에 대해 설명드리고
	네번째 garbage collection이 무엇인가에 대해서 설명드리고
	다섯번째 garbage collector의 메모리 관리에 대해서 설명드리고
	여섯번째 garbage collector의 종류에 대해 설명드리고
	이번 발표를 마치겠습니다.
3. JVM은
4. 자바 프로그램과 운영체제 사이에서 중개자 역할을 수행합니다.
그리고 운영체제에 종속적이지 않기 때문에 java파일을 하나만 생성하게 되면 어느 운영체제에서든지 java프로그램을 실행할 수 있게 도와주는 역할을 합니다.
이 JVM을 세분화해보면 크게 세가지 영역으로 나뉩니다.
5.
6. 클래스 오더, 엑스큐션, 런타임 데이터 영역입니다.
	엑스큐션 영역안있는 garbage collector가 garbage collection을 수행하며
7. 
8. 런타임 데이터 영역 안에있는 
9. 힙 메모리 영역에서 garbage collection이 발생하게 됩니다.
10. 
11. 이 Garbage collection은 스택메모리에서 힙메모리에 있는 홍객체를 참조하던 name이 연산을 수행하여 더이상 홍객체는 참조하지 않게 되고 홍길동이라는 객체를 참조하게 되는데 더이상 참조받지않는 홍객체들이 계속적으로 누적이 되어 힙 메모리가 포화 상태가 되면 더이상 객체를 저장할 곳이 사라지게 됩니다. 이때 garbage collector가 힙메모리 영역의 메모리관리를 수행합니다. 이것을 garbage collection이라고 합니다.
12.
13. Garbage collector의 메모리 관리는 크게 두가지로 수행이 됩니다.
	첫번째 stop the world
	두번째 mark and sweep 입니다.11
Garbage collection을 수행하기 위해서는 JVM이 힙메모리영역에 있는 참조되지 않는 객체를 정리하기 위해 응용프로그램을 멈추게 됩니다. 이것을 stop the world라고 합니다.
그리고 stop the world가 수행이 되고 참조되지 않는 객체를 표시하여 삭제하고 참조되는 객체만 한 곳으로 압축을 하는 것을 mark and sweep라고 합니다.
이 수행과정을 더 세분화하여 살펴보겠습니다.
14. 힙 메모리 영역은 크게 young generation과 old generation으로 나뉩니다. 그리고 young generation은 3가지 영역으로 나뉩니다. 에덴, survivor0, survivor1으로 나뉩니다.
처음에 객체가 생성이 되면 에덴 영역으로 저장이 됩니다. 그리고 객체가 계속적으로 생성이 되어 에덴이 꽉찬 상태가 되면 stop the world가 발생하게 됩니다.
15. 그리고 에덴 영역의 객체중에서 참조되지 않는 객체를 표시합니다.
16. 그리고 참조되는 객체는 survivor0으로 이동시키고 참조되지 않는 객체는 
17. 삭제됩니다.
그리고 이 과정을 반복하게 되는데 살아남는 객체들은 survivor0과 survivor1을 왔다갔다하며 나이를 먹게 되는데 garbage collector에서 정해놓은 나이가 차게 되면 
18. old generation으로 이동하게 됩니다.
19. 
20. Garbage collector의 종류에 대해 설명드리겠습니다.
21. Serial collector는 직렬 수집기 이며 마크 엔 쉐이프 알고리즘 사용합니다. 단일 스레드이며 애플리케이션 에서 애플리케이션으로
이동하게 되는데 연결되어 있는 스레드가 하나이므로 소규모 응용 프로그램이 적합 합니다.
22. Parallel Collector는 병렬 수집기라고 합니다. Serial Collector 처럼 똑같은 알고리즘을 사용하고 Serial Collector 처럼
하나의 스레드가 아닌 여러개의 스레드를 사용합니다. 그러기 때문에 대규모 응용프로그램에 적합합니다.
23. Garbage-First (G1) Garbage Collector은 동시 수집기 입니다
에덴 ,서바이벌,올드 영역이 존재하지만, 고정된 크기로 고정된 위치에 존재 하지않습니다
Parallel Collector 처럼여러 스레드를 사용하고 짧은 GC시간이 보장됩니다.
24.The Z Garbage Collector은 확장이 가능한 저지연 가비지 수집기입니다.
응용 프로그램 스레드의 실행을 중지하지 않고 모든 비용이 많이 드는 작업만 동시에수행합니다.
25.
26. 감사합니다.
11





